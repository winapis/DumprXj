[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "dumprx"
version = "2.0.0"
description = "ðŸš€ Advanced Firmware Extraction Toolkit v2.0 - Enhanced with 12+ manufacturer support, intelligent auto-detection, beautiful CLI, and Telegram bot integration"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "DumprX Team"},
    {name = "winapis", email = "contact@winapis.com"},
]
keywords = [
    "firmware", "android", "extraction", "dumping", "tools", 
    "samsung", "xiaomi", "oppo", "oneplus", "huawei", "lg", "htc", "sony",
    "boot-analysis", "manufacturer-detection", "telegram-bot", "cli"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Build Tools",
    "Topic :: System :: Archiving",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities",
]
requires-python = ">=3.8"
dependencies = [
    "click>=8.0.0",
    "rich>=13.0.0", 
    "requests>=2.25.0",
    "python-magic>=0.4.24",
    "lz4>=4.0.0",
    "zstandard>=0.19.0",
]

[project.optional-dependencies]
telegram = [
    "python-telegram-bot>=20.0",
]
mqtt = [
    "asyncio-mqtt>=0.13.0",
]
dev = [
    "pytest>=7.0",
    "black>=22.0",
    "isort>=5.0",
    "flake8>=5.0",
    "mypy>=1.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0",
]
all = [
    "dumprx[telegram,mqtt]",
]

[project.urls]
Homepage = "https://github.com/winapis/DumprXj"
Repository = "https://github.com/winapis/DumprXj"
Issues = "https://github.com/winapis/DumprXj/issues"
Documentation = "https://github.com/winapis/DumprXj/blob/main/README.md"
Changelog = "https://github.com/winapis/DumprXj/releases"

[project.scripts]
dumprx = "dumprx.cli:cli"
dumprx-bot = "dumprx.integrations.telegram_bot:run_telegram_bot"

[tool.setuptools.packages.find]
include = ["dumprx*"]

[tool.setuptools.package-data]
dumprx = ["*.txt", "*.md", "*.json"]

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | utils
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]